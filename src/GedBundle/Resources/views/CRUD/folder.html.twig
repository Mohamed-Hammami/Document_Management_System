{% extends '@Ged/default_layout.html.twig' %}

{% block avanzu_sidebar %}
    {{ parent() }}
    {% include('@Ged/clipboard.html.twig') %}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href='{{ asset('bundles/ged/AdminLTE2/plugins/iCheck/all.css') }}'>
{% endblock %}

{% block page_title %}
    <i class="fa fa-fw fa-folder-open"></i>{{ path|last.name }}
{% endblock %}

{% block page_subtitle%}
{% endblock %}

{% block avanzu_breadcrumb %}
    <ol class="breadcrumb">
        <i class="fa fa-home"></i>
        {% for folder in path %}
            {% if loop.last %}
                <li class="active">
                    {{ folder.name }}
                </li>
            {% else %}
                 <li>
                    <a href="{{ path('folder_show', {'id': folder.id}) }}">{{ folder.name }}</a>
                </li>
            {% endif %}
        {% endfor %}
    </ol>
{% endblock %}

{% block page_content %}
    <div class="row" style="margin: auto">
        {# Displaying tabs#}
        <div class="row" style="margin: auto;">
            <nav class="navbar navbar-default" role="navigation" style="margin-bottom: auto">
                <div class="container-fluid">
                    <div class="navbar-header">
                        <a class="navbar-brand" href="#"><i class="fa fa-th"></i></a>
                    </div>
                    <div>
                        <ul class="nav navbar-nav" id="tabs">
                            <li class="active" id="folder_tab"><a data-toggle="tab" href="#folder" id="folder_link">
                                    <i class="fa fa-fw fa-folder"></i>Folders</a>
                            </li>
                            <li id="file_tab"><a data-toggle="tab" href="#file" id="file_link">
                                    <i class="fa fa-fw fa-file"></i>Files</a>
                            </li>
                            <li id="edit_tab"><a data-toggle="tab" href="#edit" id="edit_link">
                                    <i class="fa fa-fw fa-edit"></i>Edit</a>
                            </li>
                        </ul>
                    </div>
                    <div class="navbar-collapse" id="add_buttons">
                        <ul class="nav navbar-nav navbar-right" id="new_folder">
                            {% if children|length %}
                                <li>
                                    <a data-toggle="modal"
                                       data-target="#folderCreate"
                                       class="add-new"
                                       href="{{ path('folder_create', {id: folder_id}) }}">
                                        <i class="fa fa-plus-circle"></i>
                                        Add new</a>
                                </li>
                            {% endif %}
                        </ul>
                        <ul class="nav navbar-nav navbar-right" id="new_file" style="display: none">
                            {% if files|length %}
                                <li>
                                    <a data-toggle="modal"
                                       data-target="#fileCreate"
                                       class="add-new"
                                       href="{{ path('file_create', {id: folder_id}) }}">
                                        <i class="fa fa-plus-circle"></i>
                                        Add new</a>
                                </li>
                            {% endif %}
                        </ul>
                        <ul class="nav navbar-nav navbar-right" id="new_permission" style="display: none">
                        </ul>
                    </div>
                </div>
            </nav>
        </div>

        <div class="tab-content">
            {# Displaying Folders #}
            <div id="folder"  class="tab-pane fade in active" style="margin-top: 15px">
                {{ include('GedBundle:CRUD:folderList.html.twig',
                    {'folder_id':     folder_id,
                    'path':           path,
                    'children':       children,
                    'folder_headers': folder_headers,
                    'folder_fields' : folder_fields,
                    'folder_actions': folder_actions})
                }}
            </div>
            {# Displaying Files #}
            <div id="file" class="tab-pane fade"  style="margin-top: 15px">
                {{ include('GedBundle:CRUD:fileList.html.twig',
                    {'folder_id':   folder_id,
                    'path':         path,
                    'files':        files,
                    'file_headers': file_headers,
                    'file_fields' : file_fields,
                    'file_actions': file_actions})
                }}
            </div>
            {# Edit Folder#}
            <div id="edit" class="tab-pane fade"  style="margin-top: 15px">
                {{ render(controller('GedBundle:Folder:edit', { 'id': folder_id })) }}
            </div>

        </div>
    </div>
{% endblock %}

{% block javascripts %}

    {{ parent() }}
    <script src="{{ asset('bundles/ged/AdminLTE2/plugins/iCheck/icheck.js') }}"></script>
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>
    <script src="{{ asset('bundles/ged/AdminLTE2/plugins/select2/select2.full.min.js') }}"></script>
    <script src="{{ asset('bundles/tetranzselect2entity/js/select2entity.js') }}"></script>


{% endblock %}

{% block javascripts_inline %}
    <script>

        // dataTables for folders_table & files_table
        $(function(){
            $("#folders_table").DataTable({
                'aoColumnDefs': [{
                    'bSortable': false,
                    'aTargets': ['nosort']
                }],
                "paging": true,
                "ordering": true,
                "bInfo" : false,

            })
        });

        $(function(){
            $("#files_table").DataTable({
                'aoColumnDefs': [{
                    'bSortable': false,
                    'aTargets': ['nosort']
                }],
                "paging": true,
                "ordering": true,
                "bInfo" : false,
            })

        });

        //iCheck for checkbox and radio inputs
        $('input[type="checkbox"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-aero'
        });

        //Move the pagination block to box footer for folders & files
        $(function(){
            $('#folders_table_paginate').insertAfter('#folder_batch_block');
        });

        $(function(){
            $('#files_table_paginate').insertAfter('#file_batch_block');
        });


        // Adding new folder or new new file depending on the active tab

        jQuery(document).ready(function($){

            $('#folder_link').click(function(){
                $('#add_buttons').children().css('display', 'none');
                console.log('folder active');
                $('#new_folder').css('display', '');
                $('#add_buttons').prepend($('#new_folder'));
            });
            $('#file_link').click(function(){
                $('#add_buttons').children().css('display', 'none');
                console.log('file active');
                $('#new_file').css('display', '');
                $('#add_buttons').prepend($('#new_file'));
            });
            $('#edit_link').click(function(){
                $('#add_buttons').children().css('display', 'none');
                console.log('permission active');
                $('#new_permission').css('display', '');
                $('#add_buttons').prepend($('#new_permission'));
            });
        });

        {% block batch_javascript %}
        jQuery(document).ready(function ($) {
            $('#folder_checkbox_all').on('ifChanged', function () {
                $(this)
                        .closest('table')
                        .find('td.folder_checkbox_field input[type="checkbox"]')
                        .iCheck($(this).is(':checked') ? 'check' : 'uncheck')
                ;
            });

        });

        jQuery(document).ready(function ($) {
            $('#file_checkbox_all').on('ifChanged', function () {
                $(this)
                        .closest('table')
                        .find('td.file_checkbox_field input[type="checkbox"]')
                        .iCheck($(this).is(':checked') ? 'check' : 'uncheck')
                ;
            });

        });
        {% endblock %}


        // Controls for clipboard buttons

        jQuery(document).ready(function ($) {

            $("#remove_cutFolders").click(function(){

                var cutFolders = [];
                {% for folder in app.session.get("cutFolders") %}
                    cutFolders.push({{ folder.id }});
                {% endfor %}

                {% if app.session.get('cutFolders')  is not null %}

                    $.ajax({
                        type: 'post',
                        url: Routing.generate('folder_reset_paste'),
                        data: { cutFolders:  cutFolders},
                        beforeSend: function(){
                        },
                        success: function(data){
                            console.log(data.status)
                        }
                    });

                    $("#cutFolder_div").empty().prepend("<span class='text-muted'>No folders in the selection</span>");
                    // ugly code !!!
                    {% if app.session.get('cutFolders') is not null %}
                    var id = {{ (app.session.get("cutFolders")|first).parent.id }};
                    {% endif %}
                    if ( id == {{ folder_id }} )
                    {
                        $(".warning").removeAttr("class");
                    }

                {% endif %}

            });

            $("#remove_cutFiles").click(function(){

                var cutFiles = [];
                {% for file in app.session.get("cutFiles") %}
                    cutFiles.push({{ file.id }});
                {% endfor %}

                {% if app.session.get('cutFiles') is not null %}
                    $.ajax({
                        type: 'post',
                        url: Routing.generate('file_reset_paste'),
                        data: { cutFiles:  cutFiles},
                        beforeSend: function(){
                        },
                        success: function(data){
                            console.log(data.status)
                        }
                    });

                    $("#cutFile_div").empty().prepend("<span class='text-muted'>No files in the selection</span>");
                    {% if app.session.get('cutFiles') is not null %}
                    var id = {{ (app.session.get("cutFiles")|first).folder.id }};
                    {% endif %}
                    console.log(id);
                    if ( id == {{ folder_id }} )
                    {
                        $(".warning").removeAttr("class");
                    }
                {% endif %}
            });

            $("#paste_folders").click(function(){

                var cutFolders = [];
                {% for folder in app.session.get("cutFolders") %}
                    cutFolders.push({{ folder.id }});
                {% endfor %}

                {% if app.session.get('cutFolders') is not null %}

                    $.ajax({
                        type: 'post',
                        url: Routing.generate('folder_paste', {parentId: {{ folder_id }}}),
                        data: { sourceId: {{ (app.session.get('cutFolders')|first).parent.id}}, childIds: cutFolders },
                        beforeSend: function(){
                        },
                        success: function(data){
                            console.log(data.status)
                            location.reload();
                        }

                    })
                {% endif %}
            });

            $("#paste_files").click(function(){

                var cutFiles = [];
                {% for file in app.session.get("cutFiles") %}
                cutFiles.push({{ file.id }});
                {% endfor %}

                {% if app.session.get('cutFiles') is not null %}

                $.ajax({
                    type: 'post',
                    url: Routing.generate('file_paste', {parentId: {{ folder_id }}}),
                    data: { sourceId: {{ (app.session.get('cutFiles')|first).folder.id}}, fileIds: cutFiles },
                    beforeSend: function(){
                    },
                    success: function(data){
                        console.log(data.status)
                        location.reload();
                    }

                })
                {% endif %}
            });

        });


    </script>
{% endblock %}
